/*
Covid 19 Data Exploration 

Skills used: Joins, CTE's, Temp Tables, Windows Functions, Aggregate Functions, Creating Views, Converting Data Types

*/
 -- total cases vs total deaths
-- likelihood of dying 
SELECT location,date,total_cases,total_deaths ,(total_deaths/total_cases)*100 as death_percentage FROM covid_deaths where location like "%India%" order by 1,2;

-- looking at total_cases vs population
-- shows what percentage of population got covid
SELECT location,population,min(total_cases),min((total_cases/population))*100 as percentage_got_covid FROM covid_deaths  where location like "%India%" group by location,population
 order by 1,2;
 
 -- showing countries with highest death_count

SELECT location,max(cast(total_deaths as int))as total_death_count FROM covid_deaths
where location like "%India%" 
where continent is not null
group by location
 order by total_death_count desc;
 
 -- percentage of death by population

SELECT location,max(cast(total_deaths as int)/population)*100 as total_death_count FROM covid_deaths 
where location like "%India%" 
where continent is not null
group by location
order by total_death_count desc;

-- total cases,total deaths,percentage of deaths

SELECT sum(new_cases) as total_cases,sum(cast(new_deaths as int)) as total_deaths,sum (cast(new_deaths as int)) /SUM (New_cases)*100 as death_percentage FROM `covid-data-analysis-392918.covid_data.covid_deaths`  


 




Select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, SUM(CONVERT(int,vac.new_vaccinations)) OVER (Partition by dea.Location Order by dea.location, dea.Date) as RollingPeopleVaccinated
--, (RollingPeopleVaccinated/population)*100
From PortfolioProject..CovidDeaths dea
Join PortfolioProject..CovidVaccinations vac
	On dea.location = vac.location
	and dea.date = vac.date
where dea.continent is not null 
order by 2,3


-- Using CTE to perform Calculation on Partition By in previous query

With PopvsVac (Continent, Location, Date, Population, New_Vaccinations, RollingPeopleVaccinated)
as
(
Select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, SUM(CONVERT(int,vac.new_vaccinations)) OVER (Partition by dea.Location Order by dea.location, dea.Date) as RollingPeopleVaccinated
--, (RollingPeopleVaccinated/population)*100
From Covid_Deaths dea
Join Covid_Vaccinations vac
	On dea.location = vac.location
	and dea.date = vac.date
where dea.continent is not null 
--order by 2,3
)
Select *, (RollingPeopleVaccinated/Population)*100
From PopvsVac



-- Using Temp Table to perform Calculation on Partition By in previous query

DROP Table if exists #PercentPopulationVaccinated
Create Table #PercentPopulationVaccinated
(
Continent nvarchar(255),
Location nvarchar(255),
Date datetime,
Population numeric,
New_vaccinations numeric,
RollingPeopleVaccinated numeric
)

Insert into #PercentPopulationVaccinated
Select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, SUM(CONVERT(int,vac.new_vaccinations)) OVER (Partition by dea.Location Order by dea.location, dea.Date) as RollingPeopleVaccinated
--, (RollingPeopleVaccinated/population)*100
From Covid_Deaths dea
Join Covid_Vaccinations vac
	On dea.location = vac.location
	and dea.date = vac.date
-- where dea.continent is not null 
-- order by 2,3

Select *, (RollingPeopleVaccinated/Population)*100
From #PercentPopulationVaccinated




-- Creating View to store data for later visualizations

Create View PercentPopulationVaccinated as
Select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, SUM(CONVERT(int,vac.new_vaccinations)) OVER (Partition by dea.Location Order by dea.location, dea.Date) as RollingPeopleVaccinated
--, (RollingPeopleVaccinated/population)*100
From Covid_Deaths dea
Join Covid_Vaccinations vac
	On dea.location = vac.location
	and dea.date = vac.date
where dea.continent is not null 


